import { MultipleResponse, SingleResponse } from './response';

import { AdditionalCostResponse } from './job.response';
import { AgentResponse } from './agent.response';
import { AssignmentDocumentResponse } from './document.response';
import { CertificateResponse } from './certificate.response';
import { IncentiveModelResponse } from './incentive_model.response';
import { SalesSlotResponse } from './client.response';

export interface AssignmentResponse {
  id?: number;
  date_id?: number;
  budget_id?: number;
  incentive_model_id?: number;
  incentive_model?: SingleResponse<IncentiveModelResponse>;
  certificate_ids?: number[];
  certificates?: MultipleResponse<CertificateResponse>;
  contact_id?: number;
  agent_id?: number;
  agent?: SingleResponse<AgentResponse>;
  assignment_budget_correction?: any;
  appointed_at?: string;
  state?: string;
  category?: string;
  description?: string;
  information?: string;
  briefing?: string;
  assignment_budget?: number;
  wage?: number;
  start_time?: string;
  finish_time?: string;
  role_name?: string;
  checkin_location?: string;
  data?: any[];
  feedback?: {
    question?: string;
    type?: string;
  }[];
  freelancer_assignment_questionnaire_instance_id?: number;
  freelancer_assignment_feedback_instance_id?: number;
  freelancer_costs_net?: number;
  documents?: MultipleResponse<AssignmentDocumentResponse>;
  saleslots?: SalesSlotResponse[];
  freelancer_ratings?: string[];
  additional_costs?: AdditionalCostResponse[];
  has_missing_docs?: boolean;
  comment?: string;
  questionnaire?: string;
  has_invoice_requirements?: boolean;
  contract_type_id?: number;
  contract_type_identifier?: string;
  date?: any;
  rate?: any;
  currency?: any;
  rate_type?: any;
  user?: any;
  planned_costs?: number;
  checkins?: { data: any[] };
  freelancer_id?: number;
  freelancers?: { data: any[] };
  invoices?: { data: any[] };
  revenues?: { data: any[] };
  is_billed?: boolean;
  is_booked?: boolean;
  is_creator?: boolean;
  is_prepareable?: boolean;
  is_done?: boolean;
  tenders?: { data: any[] };
  sedcardLink?: any;
}
